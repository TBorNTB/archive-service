server:
  port: 0

  profiles:
    active: local

spring:
  application:
    name: archive-service

  datasource:
    url: jdbc:mysql://localhost:3306/${DB_SCHEMA}?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: true

  kafka:
    bootstrap-servers: localhost:9092
    properties:
      acks: all
      enable.idempotence: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # JsonSerializer가 타입 정보를 헤더에 넣지 않게(호환성↑)
      properties:
        spring.json.add.type.headers: false
      retries: 10
      linger-ms: 20       # 소량 배치
      batch-size: 32768

  cloud:
    aws:
      region:
        static: ap-northeast-2
      credentials:
        access-key: ${S3_ACCESS_KEY}
        secret-key: ${S3_SECRET_KEY}
      stack:
        auto: false

aws:
  s3:
    bucket: ${S3_BUCKET}
    region: ap-northeast-2

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_DEFAULTZONE}
    enabled: true

jwt:
  secret: ${JWT_SECRET}
  expiration-time: 3600000
  refresh-expiration-time: 604800000

springdoc:
  api-docs:
    version: openapi_3_0
    enabled: true
    path: /v3/api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    enabled: true
    path: /swagger-ui.html